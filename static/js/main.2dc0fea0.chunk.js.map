{"version":3,"sources":["components/SectionSup.js","components/SectionInf.js","components/Yahtzee_Score_Sheet.js","components/Players.js","components/Dice.js","data/dices.js","data/player.js","data/scoreSup.js","data/scoreInf.js","fct/scoreInf.js","components/Name.js","components/NextRound.js","App.js","index.js"],"names":["SectionSup","ListGroup","as","Item","className","SectionInf","ScoreSheet","Players","player","scoreSup","scoreInf","reset","useState","scoreSup2","setScoreSup2","scoreInf2","setScoreInf2","addingTot","scoreInfWithoutTot","i","length","push","filter","tot","scoreName","resultConf","reduce","acc","el","variant","name","map","Badge","hidden","confirmed","attempt","onClick","scoreSuperieur","result","totSup","sup","addingSupTotBonus","addingSup","scoreinferieur","addingInf","Dice","dice","hide","id","rollClass","data-roll","type","dataDices","diceNumber","kept","dataPlayer","score","dataScoreSup","dataScoreInf","scoreInfFct","inf","results","threeOfAKind","tempArray","sort","threeOfAKindResult","fourOfAKind","fourOfAKindResult","full","tempArray2","resultNoDupesAndSorted","Set","straightSm","smallStraight","largeStraight","luckResult","luck","yams","Name","onChangeName","player_name","onChange","placeholder","required","forhtml","NextRound","textModal","modalEndTurn","App","setPlayer","inputName","setInputName","visible","setVisible","setTextModal","dices","setDices","setScoreSup","setScoreInf","hideCheckBox","setHideCheckBox","roll","playerAttempt","check","document","querySelectorAll","de","forEach","checked","Math","floor","random","toString","diceSum","parseInt","scoreSheetSup","scoreSheetInf","playername","alert","e","target","value","location","reload","scorePlayer","scoreConfirmation","playerAtt","resetAfterConf","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2dc0fea0.chunk.js","sourcesContent":["import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction SectionSup() {\r\n    return (\r\n        <div>\r\n            <ListGroup as='ul'>\r\n                <ListGroup.Item as='li' className=\"colorhead text-center longScoreFontSize\">Section supérieur</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 1</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 2</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 3</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 4</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 5</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total des 6</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Bonus(63+)</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total supérieur</ListGroup.Item>\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionSup","import ListGroup from 'react-bootstrap/ListGroup';\r\n\r\nfunction SectionInf() {\r\n    return (\r\n        <div>\r\n            <ListGroup as='ul'>\r\n                <ListGroup.Item as='li' className=\"colorhead text-center longScoreFontSize\">Section Inférieur</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Brelan</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Carré</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Full</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Petite Suite</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Grande Suite</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Chance</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Yams</ListGroup.Item>\r\n                <ListGroup.Item as='li' className=\"p-1\">Total</ListGroup.Item>\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SectionInf","import SectionSup from './SectionSup';\r\nimport SectionInf from './SectionInf';\r\n\r\nfunction ScoreSheet() {\r\n\r\n    return (\r\n        <div>\r\n            <SectionSup />\r\n            <SectionInf />\r\n        </div>\r\n    )\r\n}\r\nexport default ScoreSheet;","import ListGroup from 'react-bootstrap/ListGroup';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { useState } from 'react';\r\n\r\nfunction Players({ player, scoreSup, scoreInf, reset }) {\r\n    // scorsup clone\r\n    let [scoreSup2, setScoreSup2] = useState(scoreSup);\r\n    let [scoreInf2, setScoreInf2] = useState(scoreInf);\r\n\r\n    function addingSup(i) {\r\n        //making array clone\r\n        let scoreSuperieur = [...scoreSup2];\r\n\r\n        //confirm result\r\n        scoreSuperieur[i].confirmed = true;\r\n        scoreSuperieur[i].resultConf = scoreSup[i].result;\r\n\r\n        // bonus & tot sup sum\r\n        addingSupTotBonus(scoreSuperieur);\r\n        addingTot();\r\n\r\n        // setState\r\n        setScoreSup2(scoreSuperieur);\r\n\r\n        //reset attempts and checkbox\r\n        reset();\r\n    }\r\n    function addingInf(i) {\r\n        //making array clone\r\n        let scoreinferieur = [...scoreInf2];\r\n\r\n        //confirm result\r\n        scoreinferieur[i].confirmed = true;\r\n        scoreinferieur[i].resultConf = scoreInf[i].result;\r\n\r\n        //total\r\n        addingTot();\r\n\r\n        // setState\r\n        setScoreInf2(scoreinferieur);\r\n\r\n        //reset attempts and checkbox\r\n        reset();\r\n    }\r\n\r\n    function addingSupTotBonus(scoreSuperieur) {\r\n        // tot sup\r\n        var totSup = scoreSuperieur[7].resultConf;\r\n        scoreSuperieur.filter(sup =>sup.scoreName ==='total')[0].resultConf = scoreSuperieur.reduce((acc, el) => acc + el.resultConf, 0) - totSup;\r\n\r\n        // bonus\r\n        scoreSuperieur.filter(sup =>sup.scoreName ==='total')[0].resultConf >= 63 ? scoreSuperieur.filter(sup =>sup.scoreName ==='bonus')[0].resultConf = 35 : scoreSuperieur.filter(sup =>sup.scoreName ==='bonus')[0].resultConf = 0;\r\n\r\n        // tot sup to add bonus eventually\r\n        totSup = scoreSuperieur[7].resultConf;\r\n        scoreSuperieur.filter(sup =>sup.scoreName ==='total')[0].resultConf = scoreSuperieur.reduce((acc, el) => acc + el.resultConf, 0) - totSup;\r\n    }\r\n    function addingTot() {\r\n        let scoreInfWithoutTot = [];\r\n        for (let i = 0; i < scoreInf.length -1 ; i++) {\r\n            scoreInfWithoutTot.push(scoreInf[i]);\r\n        }\r\n        scoreInf.filter(tot =>tot.scoreName ==='total')[0].resultConf = scoreSup[scoreSup.length -1].resultConf + scoreInfWithoutTot.reduce((acc,el)=>acc+el.resultConf,0);\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            <ListGroup as=\"ul\">\r\n                {/* player name */}\r\n                <ListGroup.Item as=\"li\" variant='secondary' className='text-center longScoreFontSize'>{player.name}</ListGroup.Item>\r\n                {/* loop each sup score */}\r\n                {scoreSup.map((el, i) => {\r\n                    return (\r\n                        <ListGroup.Item as=\"li\" key={i} className=\"p-1 d-flex justify-content-around align-items-center bold\">\r\n                            <span>{el.resultConf} pts</span>\r\n                            {i <= (scoreInf.length - 2) ? <Badge hidden={el.confirmed || player.attempt === 3} onClick={() => addingSup(i)} className='btn' variant=\"primary\">{el.result}</Badge> : ''}\r\n                        </ListGroup.Item>\r\n                    )\r\n                })\r\n                }\r\n                {/* attempts */}\r\n                <ListGroup.Item as=\"li\" variant='secondary' className='text-center longScoreFontSize'>Lancer restants: {player.attempt}</ListGroup.Item>\r\n                {/* loop each inf score */}\r\n                {scoreInf.map((el, i) => {\r\n                    return (\r\n                        <ListGroup.Item as=\"li\" key={i} className=\"p-1 d-flex justify-content-around align-items-center bold\">\r\n                            <span>{el.resultConf} pts</span>\r\n                            {i <= (scoreInf.length - 1) ? <Badge hidden={el.confirmed || player.attempt === 3} onClick={() => addingInf(i)} className='btn' variant=\"primary\">{el.result}</Badge> : ''}\r\n                        </ListGroup.Item>\r\n                    )\r\n                })\r\n                }\r\n            </ListGroup>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Players","function Dice({dice,hide}) {\r\n\r\n    return (\r\n        <div id='diceResp'>\r\n            <div className={`box ${dice.rollClass}`} data-roll={dice.result}>\r\n                <div className=\"dice first-face\">\r\n                    <span className=\"dot\"> </span>\r\n                </div>\r\n                <div className=\"dice second-face\">\r\n                    <span className=\"dot\"></span>\r\n                    <span className=\"dot\"></span>\r\n                </div>\r\n                <div className=\"dice third-face\">\r\n                    <span className=\"dot\"></span>\r\n                    <span className=\"dot\"></span>\r\n                    <span className=\"dot\"></span>\r\n                </div>\r\n                <div className=\"dice fourth-face\">\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dice fifth-face\">\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"dice sixth-face\">\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                        <span className=\"dot\"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='text-center m-1' hidden={hide}>\r\n                <input type=\"checkbox\" className='check' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dice","var dataDices = [\r\n    {\r\n        diceNumber: 1,\r\n        result: '1',\r\n        kept: false,\r\n        rollClass: 'even-roll'\r\n    },\r\n    {\r\n        diceNumber: 2,\r\n        result: '2',\r\n        kept: false,\r\n        rollClass: 'even-roll'\r\n    },\r\n    {\r\n        diceNumber: 3,\r\n        result: '3',\r\n        kept: false,\r\n        rollClass: 'even-roll'\r\n    },\r\n    {\r\n        diceNumber: 4,\r\n        result: '4',\r\n        kept: false,\r\n        rollClass: 'even-roll'\r\n    },\r\n    {\r\n        diceNumber: 5,\r\n        result: '5',\r\n        kept: false,\r\n        rollClass: 'even-roll'\r\n    }\r\n]\r\n\r\nexport default dataDices;","var dataPlayer = {\r\n    name: '',\r\n    attempt: 3,\r\n    score: 0\r\n}\r\nexport default dataPlayer;","var dataScoreSup = [\r\n    {\r\n        scoreName: 'one',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'two',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'three',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'four',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'five',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'six',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'bonus',\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'total',\r\n        resultConf: 0,\r\n    },\r\n]\r\nexport default dataScoreSup;","var dataScoreInf = [\r\n    {\r\n        scoreName: 'threeOfAKind',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'fourOfAKind',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'full',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'straightSm',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'straightL',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'luck',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'yams',\r\n        confirmed: false,\r\n        result: 0,\r\n        resultConf: 0,\r\n    },\r\n    {\r\n        scoreName: 'total',\r\n        resultConf: 0,\r\n    },\r\n]\r\nexport default dataScoreInf;","\r\nexport default function scoreInfFct(inf, results) {\r\n    // three of a kind\r\n    threeOfAKind(inf, results);\r\n    // four of a kind\r\n    fourOfAKind(inf, results);\r\n    //full\r\n    full(inf, results);\r\n    // small straight\r\n    smallStraight(inf, results);\r\n    // large straight\r\n    largeStraight(inf, results);\r\n    //luck\r\n    luck(inf, results);\r\n    //yams\r\n    yams(inf, results);\r\n}\r\n\r\n\r\n\r\n// three of kind fct\r\nfunction threeOfAKind(inf, results) {\r\n    // push all result in another array if there is three of a kind\r\n    let threeOfAKind = [];\r\n    const tempArray = [...results].sort()\r\n    for (let i = 0; i < tempArray.length; i++) {\r\n        if (tempArray[i + 2] === tempArray[i]) {\r\n            threeOfAKind.push(tempArray[i]);\r\n        }\r\n    }\r\n\r\n    // check if three of a kind array is nul if not multiply result by 3\r\n    if (threeOfAKind.length !== 0) {\r\n        let threeOfAKindResult = threeOfAKind[0] * 3;\r\n        inf.filter(inf => inf.scoreName === 'threeOfAKind')[0].result = threeOfAKindResult;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'threeOfAKind')[0].result = 0;\r\n    }\r\n}\r\n//four of kind fct\r\nfunction fourOfAKind(inf, results) {\r\n    // push all result in another array if there is four of a kind\r\n    let fourOfAKind = [];\r\n    const tempArray = [...results].sort()\r\n    for (let i = 0; i < tempArray.length; i++) {\r\n        if (tempArray[i + 3] === tempArray[i]) {\r\n            fourOfAKind.push(tempArray[i]);\r\n        }\r\n    }\r\n\r\n    // check if four of a kind array is nul if not multiply result by 4\r\n    if (fourOfAKind.length !== 0) {\r\n        let fourOfAKindResult = fourOfAKind[0] * 4;\r\n        inf.filter(inf => inf.scoreName === 'fourOfAKind')[0].result = fourOfAKindResult;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'fourOfAKind')[0].result = 0;\r\n    }\r\n}\r\n//Yams fct\r\nfunction yams(inf, results) {\r\n    // push all result in another array if there is yams\r\n    let yams = [];\r\n    const tempArray = [...results].sort()\r\n    for (let i = 0; i < tempArray.length; i++) {\r\n        if (tempArray[i + 4] === tempArray[i]) {\r\n            yams.push(tempArray[i]);\r\n        }\r\n    }\r\n\r\n    // check if yams array is nul if not + 50 pts\r\n    if (yams.length !== 0) {\r\n        inf.filter(inf => inf.scoreName === 'yams')[0].result = 50;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'yams')[0].result = 0;\r\n    }\r\n}\r\n//full fct\r\nfunction full(inf, results) {\r\n    // push all result in another array if there is a full\r\n    let full = [];\r\n    //checking for three same dices\r\n    const tempArray = [...results].sort();\r\n    for (let i = 0; i < tempArray.length; i++) {\r\n        if (tempArray[i + 2] === tempArray[i]) {\r\n            full.push(tempArray[i]);\r\n        }\r\n    }\r\n    //checking for two same dices\r\n    const tempArray2 = [...results].sort();\r\n    for (let i = 0; i < tempArray2.length; i++) {\r\n        if (tempArray2[i + 1] === tempArray2[i]) {\r\n            full.push(tempArray2[i]);\r\n        }\r\n    }\r\n    //checking full and if there is a full : +25pts\r\n    if (full.length === 4) {\r\n        inf.filter(inf => inf.scoreName === 'full')[0].result = 25;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'full')[0].result = 0;\r\n    }\r\n}\r\n// luck fct\r\nfunction luck(inf, results) {\r\n    // sum all results\r\n    let luckResult = results.reduce((acc, result) => acc + result, 0);\r\n    inf.filter(inf => inf.scoreName === 'luck')[0].result = luckResult;\r\n}\r\n// small straight fct\r\nfunction smallStraight(inf, results) {\r\n    // sorting and remove duplicates from results\r\n    const resultNoDupesAndSorted = [...new Set(results)].sort();\r\n\r\n    // check if results are consecutive numbers\r\n    let straightSm = [];\r\n    for (let i = 0; i < resultNoDupesAndSorted.length - 1; i++) {\r\n        if (resultNoDupesAndSorted[i] === (resultNoDupesAndSorted[i + 1] - 1)) {\r\n            straightSm.push(true);\r\n        }\r\n    }\r\n\r\n    //check small straight\r\n    if (straightSm.length >= 3) {\r\n        inf.filter(inf => inf.scoreName === 'straightSm')[0].result = 30;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'straightSm')[0].result = 0;\r\n    }\r\n}\r\n//large straight fct\r\nfunction largeStraight(inf, results) {\r\n    // sort and filter results to see if there is a large straight\r\n    const resultNoDupesAndSorted = [...new Set(results)].sort();\r\n    let largeStraight = resultNoDupesAndSorted.filter(result => result >= 2 && result <= 5);\r\n    if (largeStraight.length === 4 && resultNoDupesAndSorted.length === 5) {\r\n        inf.filter(inf => inf.scoreName === 'straightL')[0].result = 40;\r\n    } else {\r\n        inf.filter(inf => inf.scoreName === 'straightL')[0].result = 0;\r\n    }\r\n}\r\n","function Name({ onChangeName, player_name }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <h1 className='text-center'>Introduisez votre nom de joueur</h1>\r\n            <div className=\"form__group field mx-auto d-flex mt-2\">\r\n                <input onChange={onChangeName} type=\"input\" className=\"form__field\" placeholder=\"Nom\" required />\r\n                <label forhtml=\"name\" className=\"form__label\">Nom:</label>\r\n                <button onClick={player_name} className=\"btn colorhead mt-3\">ok</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Name;","function NextRound({ textModal, modalEndTurn }) {\r\n    return (\r\n        <div className=\"card\">\r\n            <h2 className='text-center fontsizeResp'>{textModal}</h2>\r\n            <div className=\"position-relative text-center mt-5\">\r\n                <button onClick={modalEndTurn} className=\"btn colorhead mt-3\">ok</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NextRound;\r\n\r\n","import React, { useState } from 'react';\r\nimport ScoreSheet from './components/Yahtzee_Score_Sheet';\r\nimport Players from './components/Players';\r\nimport Dice from './components/Dice';\r\nimport dataDices from './data/dices';\r\nimport dataPlayer from './data/player';\r\nimport dataScoreSup from './data/scoreSup';\r\nimport dataScoreInf from './data/scoreInf';\r\nimport scoreInfFct from './fct/scoreInf';\r\nimport Name from \"./components/Name\";\r\nimport NextRound from \"./components/NextRound\";\r\n\r\nfunction App() {\r\n  //player data\r\n  let [player, setPlayer] = useState(dataPlayer);\r\n\r\n  // set player name \r\n  let [inputName, setInputName] = useState(\"\");\r\n\r\n  //modal\r\n  let [visible, setVisible] = useState(true);\r\n\r\n  let [textModal, setTextModal] = useState(`Manche terminée, vous pouvez relancer`);\r\n\r\n  function onChangeName(e) {\r\n    setInputName(e.target.value);\r\n  }\r\n  function player_name() {\r\n    var playername = player;\r\n    if (inputName !== \"\") {\r\n      setVisible(false);\r\n      playername.name = inputName;\r\n      setPlayer(playername);\r\n    } else {\r\n      alert('veuillez introduire votre nom SVP');\r\n    }\r\n  }\r\n\r\n  // dices data\r\n  let [dices, setDices] = useState(dataDices);\r\n\r\n  // score Sup data\r\n  let [scoreSup, setScoreSup] = useState(dataScoreSup);\r\n  // score Inf data\r\n  let [scoreInf, setScoreInf] = useState(dataScoreInf);\r\n\r\n  // hide checkbox trur or false\r\n  let [hideCheckBox, setHideCheckBox] = useState(true);\r\n\r\n  // when rolling the dice\r\n  function roll() {\r\n    // check attempts\r\n    if (player.attempt === 0) {\r\n      setTextModal(`Il ne vous reste plus de lancer, confirmer d'abord les points pour passer à la manche suivante`);\r\n      return setVisible(true);\r\n    }\r\n    if (player.attempt < 4) {\r\n      let hide = hideCheckBox;\r\n      hide = false\r\n      setHideCheckBox(hide);\r\n    }\r\n    // player attempts - 1\r\n    let playerAttempt = player;\r\n    playerAttempt.attempt--;\r\n\r\n    // dice results and dice animation\r\n    const check = document.querySelectorAll('.check');\r\n    let de = [...dices];\r\n    de.forEach((el, i) => {\r\n      el.kept = check[i].checked ? true : false;\r\n      if (el.kept === false) {\r\n        el.result = (Math.floor(Math.random() * (6)) + 1).toString();\r\n        el.rollClass = el.rollClass === 'even-roll' ? 'odd-roll' : 'even-roll';\r\n      }\r\n    });\r\n\r\n    // setStates\r\n    setDices(de);\r\n    setPlayer(playerAttempt);\r\n\r\n    // scoresheet\r\n    scoreSheetSup();\r\n    scoreSheetInf();\r\n  }\r\n\r\n  function scoreSheetSup() {\r\n    let sup = [...scoreSup];\r\n    for (let i = 0; i < 6; i++) {\r\n      let diceFiltered = dices.filter(dice => dice.result === `${i + 1}`);\r\n      let diceSum = diceFiltered.reduce((acc, dice) => acc + parseInt(dice.result), 0);\r\n      sup[i].result = diceSum;\r\n    }\r\n    // setState\r\n    setScoreSup(sup);\r\n  }\r\n\r\n  function scoreSheetInf() {\r\n    let inf = [...scoreInf];\r\n    // push all results in array\r\n    let results = [];\r\n    dices.forEach(el => {\r\n      results.push(parseInt(el.result));\r\n    });\r\n\r\n    //score inf\r\n    scoreInfFct(inf, results);\r\n\r\n    // setState\r\n    setScoreInf(inf);\r\n  }\r\n\r\n  //reset attempts and checkbox\r\n  function resetAfterConf() {\r\n    // player score\r\n    let scorePlayer = player;\r\n    player.score = scoreInf[scoreInf.length - 1].resultConf;\r\n    setPlayer(scorePlayer);\r\n\r\n    //check if game is finished\r\n    let scoreConfirmation = [];\r\n    for (let i = 0; i < scoreSup.length - 2; i++) {\r\n      if (scoreSup[i].confirmed === true) {\r\n        scoreConfirmation.push(true);\r\n      }\r\n    }\r\n    for (let i = 0; i < scoreInf.length - 1; i++) {\r\n      if (scoreInf[i].confirmed === true) {\r\n        scoreConfirmation.push(true);\r\n      }\r\n    }\r\n    if (scoreConfirmation.length === 13) {\r\n      setTextModal(`vous avez terminé avec un score de ${player.score}`);\r\n      setVisible(true);\r\n    } else {\r\n      // game not done yet\r\n      setTextModal(`Manche terminée, vous pouvez relancer`);\r\n      setVisible(true);\r\n    }\r\n\r\n    // attempts\r\n    let playerAtt = player;\r\n    playerAtt.attempt = 3;\r\n    setPlayer(playerAtt);\r\n\r\n    // checkbox\r\n    const check = document.querySelectorAll('.check');\r\n    dices.forEach((el, i) => {\r\n      check[i].checked = false;\r\n      el.kept = false;\r\n    });\r\n\r\n    // hide checkbox\r\n    if (player.attempt === 3) {\r\n      let hide = hideCheckBox;\r\n      hide = true\r\n      setHideCheckBox(hide);\r\n    }\r\n  }\r\n\r\n  function modalEndTurn() {\r\n    if (textModal === `vous avez terminé avec un score de ${player.score}`) {\r\n      document.location.reload();\r\n    } else {\r\n      setVisible(false);\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={visible ? 'fadein' : 'fadeout'}>\r\n        {player.name === '' ? <Name visible={visible} player_name={() => player_name()} onChangeName={(e) => onChangeName(e)} /> : <NextRound textModal={textModal} modalEndTurn={() => modalEndTurn()} />}\r\n      </div>\r\n      <div className=\"container-fluid mt-5\">\r\n        <div className=\"row g-0\">\r\n          <div className=\"col-lg-2 mx-auto\">\r\n            <ScoreSheet />\r\n          </div>\r\n          <div className=\"col-lg-2 mx-auto\">\r\n            <Players player={player} scoreSup={scoreSup} scoreInf={scoreInf} reset={() => resetAfterConf()} />\r\n          </div>\r\n          <div className=\"col-lg-8 col-sm-12 col-md-12 container\">\r\n            <div className=\"bg-green allCenter flex-column\">\r\n              <div className=\"allCenter\">\r\n                <div className=\"row\">\r\n                  {dices.map((el, i) => {\r\n                    return (\r\n                      <div key={i} className=\"col\">\r\n                        <Dice dice={el} attempt={player.attempt} hide={hideCheckBox} />\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              <div className=\"row mt-3\">\r\n                <div className=\"col\">\r\n                  <button onClick={() => roll()}\r\n                    className=\"btn btn-danger\">Lancer</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}